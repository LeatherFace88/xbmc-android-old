--- gettext-0.17.old/gettext-tools/src/msginit.c	2007-10-07 21:37:38.000000000 +0200
+++ gettext-0.17/gettext-tools/src/msginit.c	2011-11-13 13:26:49.000000000 +0100
@@ -1020,6 +1020,9 @@
     {
       const char *fullname;
       const char *fullname_end;
+#if defined(__ANDROID__)
+      char *result = "android";
+#else
       char *result;
 
       /* Return the pw_gecos field, upto the first comma (if any).  */
@@ -1033,6 +1036,7 @@
       result[fullname_end - fullname] = '\0';
 
       return result;
+#endif
     }
 #endif
 
@@ -1041,7 +1045,7 @@
 
 
 /* Return the user's email address.  */
-static const char *
+const char *
 get_user_email ()
 {
   const char *prog = relocate (LIBDIR "/gettext/user-email");
@@ -1105,7 +1109,7 @@
 
 
 /* Construct the value for the Last-Translator field.  */
-static const char *
+const char *
 last_translator ()
 {
   if (no_translator)
@@ -1124,7 +1128,7 @@
 
 
 /* Return the name of the language used by the language team, in English.  */
-static const char *
+const char *
 language_team_englishname ()
 {
   size_t i;
@@ -1140,7 +1144,7 @@
 
 
 /* Return the language team's mailing list address or homepage URL.  */
-static const char *
+const char *
 language_team_address ()
 {
   const char *prog = relocate (PROJECTSDIR "/team-address");
@@ -1200,7 +1204,7 @@
 
 
 /* Construct the value for the Language-Team field.  */
-static const char *
+const char *
 language_team ()
 {
   if (no_translator)
@@ -1219,7 +1223,7 @@
 
 
 /* Construct the value for the MIME-Version field.  */
-static const char *
+const char *
 mime_version ()
 {
   return "1.0";
@@ -1227,7 +1231,7 @@
 
 
 /* Construct the value for the Content-Type field.  */
-static const char *
+const char *
 content_type (const char *header)
 {
   bool was_utf8;
@@ -1255,7 +1259,7 @@
 
 
 /* Construct the value for the Content-Transfer-Encoding field.  */
-static const char *
+const char *
 content_transfer_encoding ()
 {
   return "8bit";
@@ -1263,7 +1267,7 @@
 
 
 /* Construct the value for the Plural-Forms field.  */
-static const char *
+const char *
 plural_forms ()
 {
   size_t i;
@@ -1282,7 +1286,7 @@
 }
 
 
-static struct
+struct
 {
   const char *name;
   const char * (*getter0) (void);
@@ -1305,7 +1309,7 @@
 
 
 /* Retrieve a freshly allocated copy of a field's value.  */
-static char *
+char *
 get_field (const char *header, const char *field)
 {
   size_t len = strlen (field);
@@ -1343,7 +1347,7 @@
 }
 
 /* Add a field with value to a header, and return the new header.  */
-static char *
+char *
 put_field (const char *old_header, const char *field, const char *value)
 {
   size_t len = strlen (field);
@@ -1412,7 +1416,7 @@
 
 
 /* Return the title format string.  */
-static const char *
+const char *
 get_title ()
 {
   /* This is tricky.  We want the translation in the given locale specified by
@@ -1500,7 +1504,7 @@
 /* Perform a set of substitutions in a string and return the resulting
    string.  When subst[j][0] found, it is replaced with subst[j][1].
    subst[j][0] must not be the empty string.  */
-static const char *
+const char *
 subst_string (const char *str,
 	      unsigned int nsubst, const char *(*subst)[2])
 {
@@ -1553,7 +1557,7 @@
 /* Perform a set of substitutions on each string of a string list.
    When subst[j][0] found, it is replaced with subst[j][1].  subst[j][0]
    must not be the empty string.  */
-static void
+void
 subst_string_list (string_list_ty *slp,
 		   unsigned int nsubst, const char *(*subst)[2])
 {
@@ -1565,7 +1569,7 @@
 
 
 /* Fill the templates in all fields of the header entry.  */
-static msgdomain_list_ty *
+msgdomain_list_ty *
 fill_header (msgdomain_list_ty *mdlp)
 {
   /* Cache the strings filled in, for use when there are multiple domains
@@ -1656,7 +1660,7 @@
 
 
 /* Update the msgstr plural entries according to the nplurals count.  */
-static msgdomain_list_ty *
+msgdomain_list_ty *
 update_msgstr_plurals (msgdomain_list_ty *mdlp)
 {
   size_t k;
